worker_processes  auto;

events {
	use epoll;
}

http {
	log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
		'$status "$http_referer" "$http_user_agent"';

	access_log  /dev/stdout  main;
	error_log   stderr debug;

	default_type  application/octet-stream;
	include       /usr/local/nginx/conf/mime.types;

	# tcp_nopush  on;
	tcp_nodelay on;


	open_file_cache          max=1000 inactive=5m;
	open_file_cache_valid    2m;
	open_file_cache_min_uses 1;
	open_file_cache_errors   on;

	aio on;
	
	upstream minio {
        server minio-minio-nginx-1:9000;
    }

	server {
		listen 80;
		server_name localhost;

        # vod mode
        vod_mode mapped;
        vod_upstream_location /json;
        vod_remote_upstream_location /proxy;

        # vod caches
        vod_metadata_cache metadata_cache 512m;
        vod_response_cache response_cache 128m;
        vod_mapping_cache mapping_cache 5m;

        # gzip manifests
        gzip on;
        gzip_types application/vnd.apple.mpegurl;

        # file handle caching
        open_file_cache          max=1000 inactive=5m;
        open_file_cache_valid    2m;
        open_file_cache_min_uses 1;
        open_file_cache_errors   on;

        location ^~ /json/hls/ {
            internal;
            proxy_pass http://minio/movie-json/;
            proxy_set_header Host $http_host;
        }

        location ~ /proxy/([^/]+)/(.*) {
            internal;
            proxy_pass $1://$2;
            resolver 8.8.8.8;
        }

        location ^~ /hls/ {
            vod hls;

            add_header Access-Control-Allow-Headers '*';
            add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Origin '*';
            expires 7d;
        }
	}
}